<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DwAACw8BkvkDpQAABDFJREFUeF7tm0vIFlUYx3/dMytMJTNqYRcVghBFEWtXES1adNsIuWhR5gUlgsIL
        qIgIEWYEURCZYIJWEEotInUhLaR0U7hIU8qKoHtZalny/zgH5nt4Zr55z7wz813mD//F982c5zznf877
        nPPO/F/o0KFDS7gYWADMtRdGO2YBLwDfAP8D/wH325tGG24BVgNfhEFbPmUbjAZcDywDPgmzbActngI2
        ApfbxiMV44DHgD3AOWfA4q/AduBB4FIbYCRCs6fB7AROOwMW/wZ2Aw8BV9gAJXEJcA/wOvA28Chwpb2p
        ScwBtgI/OAMWzwMHgRXAJNu4B9wBrANOOH00vppiMsecZCJV6J4DptrGPeDmINwRJ34evw0TcrcNVhUx
        mc+cTiNPApuBGbZxD7gOWAR8VFA0y/JomKjbbSdlMRlYEpZwXjLfAVsqHmTGAwuBvQVFM4/aQV4EXgV+
        dK5HahfSbqRdqRCq4Pos7QLOOoHEfnzmVMy0TF8Dfnf6KOLPOf0r5r3h2h9OO/HfMKFPAtdk2g788Sbw
        p9NIPAO8BzxSserOB14uKJp5/C0M7AHgMhvUgcbzOPBhGLSNJ2qs24Br1WCxc4Mq+MfAE8AE20MPUE1Y
        D3zp9FFEbZvvBNG1MlMxBVgePi62D1G1baBYxH8o0WeAG22kHnADsBI45HRYRNWAD0IhHJiZipgGrAI+
        d/qK1NgHCTDwjwRkT4D/OB3lMXtW0GxVxcTwGS8q3llWEiBbePLqRx51VlBfmqWquKrE8TuPyQKooH3v
        BCyiluIa4DYbLAE6TutYreP1X05fZZkswPtOMI9fAZuAO22ABMTvAm8Avzh9pTBZgP1OsEhtm6+EVXKR
        bZiAecBL4eBl+6rKWgRQEaqKmcCGhO2zV9YigJJPwU3As8BhJ2ZdrEWA6fbmAmjb0uOwA2FLtLHqZqsC
        zAZ+cto3yVYFWOu0bZrJAuxzgkWWFSDbb1tMFuB5J1jkmBBA0MuMHeZBqApZ2ed/I16ACH3/1je4t8LT
        nbIYNQKkohPASahpdgLYRDoBbJY1ohPASahpdgLYRDoBbJY1ohPASahpdgLYRDoBbJY1ohPASahpdgLY
        RMa8AP14PV4Ww0aAp50L/TJIFGE4CLBUiVwd/Dp5r7jl1ngXeLiiRcaiTQHkgZIDZdDkNmWSimhDgE+D
        GWNIx1gZz17WmJjyFrgpAaIZ41abQFmUMUrKxiqjZNl3AkKdAnwdJkev3/qKflpl+y1A9BDKtpOyIntG
        WbO0/AKe66sfAqhAyxskj1Brvzko49KMiaquyNQkpAog86Nqk2INcnwOB2hLlUtTfr88u5yWqjz/MjjZ
        a3lUIdZqkn9ZPuYRAZkfhtpJhmKs4P1wlrWKuJOUsb/o12S1+P6HC+JOcjwz6GwF1+8JxwQ00LuA+9qs
        4B06jHFcAE0arynl9vyIAAAAAElFTkSuQmCC
</value>
  </data>
</root>